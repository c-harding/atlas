#!/usr/bin/env bash

set -e

. "$(cd "$(dirname "$(readlink -f "$0")")" && pwd)"/connect

case $SERVER_PORT in
    '') echo "SERVER_PORT is missing" >&2; exit 1 ;;
    *[^0-9]*) echo "PORT_VARIABLE is set, but is not a valid bash identifier" >&2; exit 1 ;;
esac

case $PORT_VARIABLE in
    '') PORT_ASSIGNMENT="" ;;
    *[^A-Za-z0-9_]*) echo "PORT_VARIABLE is set, but is not a valid bash identifier" >&2; exit 1 ;;
    *) PORT_ASSIGNMENT="$PORT_VARIABLE=$SERVER_PORT" ;;
esac

# On the server, start the docker process, clear old docker images and then set up port forwarding
# (assuming the server is set up as in this gist:
# https://gist.github.com/c-harding/59686990f42f4dddae01dffa56618ea4, if not then this stage is
# simply skipped).
(
  RAW_DOMAIN="${DOMAIN/#*\/\//}"
  DEPLOY_COMMAND="$(printf "
    %s docker-compose -f%q/docker-compose.yml up --build -d &&
    docker system prune -f &&
    (command -v add-site > /dev/null && add-site %q %d; true)
  " "$PORT_ASSIGNMENT" "${DEPLOY_DIR:?missing, this must be provided to specify where on the server to deploy to}" "$RAW_DOMAIN" "$SERVER_PORT")"

  rsync --exclude=".ec2-deploy" -re"ssh $DEPLOY_FLAG" "${SOURCE_DIR:-.}" "$DEPLOY_TARGET":"$DEPLOY_DIR" &&
  ssh "$DEPLOY_FLAG" "$DEPLOY_TARGET" "$DEPLOY_COMMAND"
)